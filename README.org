* Generate a Sigal gallery from image files following filetags naming convention

This is a collection of scripts that help me generating web galleries
using [[http://sigal.saimon.org/en/latest/getting_started.html][sigal]] from image files that follow the file name convention of
the [[https://github.com/novoidfiletags/filetags][filetags method]] which is also described [[https://karl-voit.at/managing-digital-photographs/][on this blog entry]].

: (<ISO date/time stamp>)?(?<descriptive file name>)?( -- <list of tags separated by spaces>)?.<file extension>

Examples:

: 2019-12-14T11.28.44 Dinner for one -- fun silvester anniversary.jpg
: 2019-12-14 Tax returns.jpg
: 2019-12-14T15.32 Book for mum 23â‚¬ -- bill books.png
: 2019-12-13T10.36.46.jpg
: 2019-10-30T22.19.32 Nata de Coco -- food acquisition.jpg

*The scripts are customized for Karl Voit and his current setup. You
have to know how to modify it to meet your situation.* This repository
is not meant to be used by somebody else but Karl Voit and therefore
provides only minimal documentation here.

** Installation

This tool needs [[http://www.python.org/downloads/][Python 3 to be installed]].

1. Follow GitHub instructions to get the source code.
2. Understand the principle
3. Modify paths of shell scripts
4. Adapt =sigal.conf*.py= files
5. Test with test data: =dir_to_sigal_withoutzip.sh <DIRECTORY>= or =dir_to_sigal_withzip.sh <DIRECTORY>=
   - Both are equivalent. The only difference is that a downloadable
     ZIP archive is added to the gallery.
6. Inspect result via =signal serve ...= or upload to web server

** Changelog

This changelog does not list all commits/changes, just the substantial
ones.

- 2019-12-15: initial version

** How to Thank Me

I'm glad you like my tools. If you want to support me:

- Send old-fashioned *postcard* per snailmail - I love personal feedback!
  - see [[http://tinyurl.com/j6w8hyo][my address]]
- Send feature wishes or improvements as an issue on GitHub
- Create issues on GitHub for bugs
- Contribute merge requests for bug fixes
- Contribute unit tests
- Check out my other cool [[https://github.com/novoid][projects on GitHub]]

* Local Variables                                                  :noexport:
# Local Variables:
# mode: auto-fill
# mode: flyspell
# eval: (ispell-change-dictionary "en_US")
# End:
